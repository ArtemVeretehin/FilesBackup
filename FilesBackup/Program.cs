using System.Text.Json;

Console.WriteLine("Нажмите любую кнопку для запуска программы");
Console.ReadLine();


//Создаем контейнер для настроек директорий
Backuper? DirectoryConfig_Instance;

//Считываем конфиг, десеарилизуем настройки в из JSON в контейнер
using (FileStream Stream = new FileStream(@"..\..\..\DirectoryConfig.json", FileMode.Open))
{
    DirectoryConfig_Instance = await JsonSerializer.DeserializeAsync<Backuper>(Stream);
}


DirectoryConfig_Instance?.DirectoryInfoList_Fill();

try
{ 
    DirectoryConfig_Instance?.Backup();
}
catch (Exception ex)
{
    Console.WriteLine(ex.Message);
}







//Консольное приложение для резервного копирования файлов в архив.

//В файле настроек хранятся пути для исходной и целевой папки.
//При запуске программы происходит создание папки с временным штампом в целевой папке и копирование в неё всех доступных файлов из исходной. Требуется обрабатывать ситуации с невозможностью доступа к файлам в исходной папке.

//Пункты со звездочкой являются дополнительными и не обязательны для выполнения.

//* Файл настроек имеет формат JSON. - СДЕЛАЛ
//* Есть возможность указать несколько исходных папок. - СДЕЛАЛ
//* Ведется журналирование процесса копирования. Каждый запуск создает свой файл журнала. Уровень журналирования можно указать в файле настроек.
//Примеры распределения событий:
//•	Error - Ошибки приложения.Например, те, которые вызвали неожиданное падение.
//•	Info - Основные события приложения: старт приложения, обработка одной исходной папки или обработанные ошибки.
//•	Debug - Отладочная информация. Например, скопирован отдельный файл
